#!/usr/bin/env python3

import RPi.GPIO as GPIO
import subprocess

# define programs

tools = ('tool_screen','tool_vacuum_gripper')


# define pins

pin_rotary_a = 16
pin_rotary_b = 20
pin_rotary_button = 21

pin_reset_button = 12

pin_led_r = 8
pin_led_g = 7
pin_led_b = 1

pin_segment_ser = 25
pin_segment_rclk = 24
pin_segment_srclk = 23


# setup pins
GPIO.setup(pin_rotary_a, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(pin_rotary_b, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(pin_rotary_button, GPIO.IN, pull_up_down=GPIO.PUD_UP)

GPIO.setup(pin_reset_button, GPIO.IN, pull_up_down=GPIO.PUD_UP)

GPIO.setup(pin_led_r,GPIO.OUT)
GPIO.setup(pin_led_g,GPIO.OUT)
GPIO.setup(pin_led_b,GPIO.OUT)

GPIO.setup(pin_segment_ser,GPIO.OUT)
GPIO.setup(pin_segment_rclk,GPIO.OUT)
GPIO.setup(pin_segment_srclk,GPIO.OUT)


# led is yellow while program is being chosen

GPIO.output(pin_led_r,GPIO.HIGH)
GPIO.output(pin_led_g,GPIO.HIGH)
GPIO.output(pin_led_b,GPIO.LOW)


# load default tool from file

f = open('default-tool','r')
line = f.readlines()[0]
rotary_id = int(line)
f.close()


# tool is set using rotary encoder

tool_id = -1
rotary_last_a = GPIO.input(pin_rotary_a)
rotary_last_b = GPIO.input(pin_rotary_b)

while (tool_id == -1):
    if (GPIO.input(pin_rotary_button) == 0):
        if (rotary_id < len(tools)):
            tool_id = rotary_id    
	    rotary_a = GPIO.input(pin_rotary_a)
	    rotary_b = GPIO.input(pin_rotary_b)
    if ((rotary_last_a == GPIO.LOW) && (rotaryA == GPIO.HIGH)):
        if (rotary_b == GPIO.LOW):
            rotary_id -= 1
            if (rotary_id < 0):
                rotary_id = 9
        else:
            rotary_id += 1
			if (rotary_id > 9):
                rotary_id = 0
                
tool_name = tools[tool_id]


# save tool selected as default to file

f = open('default-tool','w')
f.write(str(tool_id))
f.close()


# led is green during normal program operation

GPIO.output(pin_led_r, GPIO.LOW)
GPIO.output(pin_led_g, GPIO.HIGH)
GPIO.output(pin_led_b, GPIO.LOW)


# run code for chosen tool

if (tool-name == 'tool-screen'):
    subprocess.call(['/home/pi/kuka-rpi-controller/tool-files/screen/scripts/start_gpio_watch'])
elif (tool-name == 'tool-vacuum-gripper'):
    # call vacuum script 
