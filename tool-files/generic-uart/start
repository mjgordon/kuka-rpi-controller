#!/usr/bin/env python3

import logging
import serial
import select
import socket
import struct
import time

# === DEFINITIONS ===

usb_strings = ('/dev/ttyUSB0','/dev/ttyUSB1','/dev/ttyACM0','/dev/ttyACM1')

def connect():
    global usb_strings
    for s in usb_strings:
        try:
            s = serial.Serial(s)
            return(s)
        except (OSError, serial.SerialException):
            pass
    print("No serial connection found")
    return(None)


def writeInt(value):
    ser.write(value.to_bytes(4,byteorder='little'))

def writeBytes(values):
    ser.write(bytes(values))

    
# === MAIN SCRIPT ===

# Set up logging
logging.basicConfig(filename="uart.log",level=logging.INFO,filemode='w')


# Set up networking connection with robot
kuka_socket = socket.socket()
#host = socket.gethostname()
host = "192.168.0.101"
#host = "192.168.2.203"
port = 52323
kuka_socket.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
kuka_socket.bind((host,port))
#kuka_socket.setblocking(0)
kuka_socket.listen(5)

logging.info("Host : " + host)


# Set up serial connection to arduino
# Arduino will usually but not always be '/dev/ttyUSB0'
ser = connect()

# Loop waiting for data from socket connection
# May need a way to fail out of this eventually

while (True):
    c, addr = kuka_socket.accept()
    logging.info("Client : " + str(addr))
    while c is not -1 :
        value = c.recv(5)
        if not value or value[0] == 16:
            logging.info("End")
            break
        logging.info(value)
        if (ser):
            ser.write(value)
            while (ser.inWaiting() > 0):
                logging.info("Unknown Command: " + str(ser.read(1)))
    print("Connection closed")

